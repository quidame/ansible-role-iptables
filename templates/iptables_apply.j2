{###############################################################################
  This template only applies to the filter table
#}
*filter

{###############################################################################
  Keep currently applied policies, unless policies are specified. The role
  provides a default value that is:

  iptables_apply__template_policy:
    input: DROP
    forward: DROP
    output: ACCEPT

  To reset it (i.e. to not change policies on the target host):
  iptables_apply__template_policy: {}
#}
{% if iptables_apply__template_policy.input is defined %}
:INPUT {{ iptables_apply__template_policy.input }} [0:0]
{% endif %}
{% if iptables_apply__template_policy.forward is defined %}
:FORWARD {{ iptables_apply__template_policy.forward }} [0:0]
{% endif %}
{% if iptables_apply__template_policy.output is defined %}
:OUTPUT {{ iptables_apply__template_policy.output }} [0:0]
{% endif %}

{###############################################################################
  The core rules, a.k.a. sanity rules.  Since they are inserted (-I) instead of
  being appended (-A), they MUST be inserted in the reverse order.
#}
{% if iptables_apply__template_core|bool %}
-I INPUT -p tcp -m tcp --dport {{ ansible_port|default(22) }} -m comment --comment "SSH" -j ACCEPT
-I INPUT -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m comment --comment "bad NEWs" -j DROP
-I INPUT -p tcp -m tcp --sport :1023 -m comment --comment "bad source port" -j DROP
-I INPUT -p udp -m udp --sport :1023 -m comment --comment "bad source port" -j DROP
-I INPUT -p icmp -m comment --comment "ICMP" -j ACCEPT
-I INPUT -i lo -m comment --comment "loopback" -j ACCEPT
-I INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-I INPUT -m conntrack --ctstate INVALID -j DROP

-I OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-I OUTPUT -m conntrack --ctstate INVALID -j DROP
{% endif %}

{###############################################################################
  Application-specific rules, generally to **ACCEPT** given port(s) on filter's
  **INPUT** chain and **tcp** protocol.
#}
{% for rule in iptables_apply__template_rules|default([]) %}
-A {{ rule.chain|default('INPUT') }} -p {{ rule.protocol|default('tcp') }}
{%- if ',' in rule.dport|string %} -m multiport --dports {% else %} -m {{ rule.protocol|default('tcp') }} --dport {% endif %}
{{ rule.dport }} -m comment --comment "{{ rule.name }}" -j {{ rule.jump|default('ACCEPT') }}
{% endfor %}

{###############################################################################
  The last line for a given table
#}
COMMIT
