---
# This is not very good...
- name: check that templated rules are not already in use
  check_mode: true
  lineinfile:
    path: "{{ iptables_apply__path_backup }}"
    regexp: "{{ iptables_apply__template_mark }}"
    state: absent
  register: check_rule


# First ensure the resulting file is in good shape when making it available on
# the remote host. Do not perform action directly upon the system file nor the
# system state.
- name: rewrite iptables ruleset from scratch
  template:
    src: "{{ iptables_apply__template }}"
    dest: "{{ iptables_apply__path_buffer }}"
    validate: "iptables-restore --test %s"
  register: iptables_ruleset
  when:
    - ( iptables_apply__template_once|default(True)|bool == False ) or
      ( check_rule is not changed )


# Tasks in iptables-apply.yml need this file and will remove it. But when
# iptables_ruleset is not changed, they will be skipped.
- name: cleanup temporary backup (planning to skip further tasks)
  file:
    path: "{{ iptables_apply__path_backup }}"
    state: absent
  when: iptables_ruleset is not changed

