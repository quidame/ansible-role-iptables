---
# It will be used in case of rollback, and as the starting point for `append`,
# `insert` or `delete` actions.
- name: save initial state of the firewall
  shell: >
    iptables-save {{ '-t filter' if iptables_apply__action != 'template' else '' }} |
    tee {{ iptables_apply__path_backup }} {{
           iptables_apply__path_buffer if iptables_apply__action != 'template' else ''
        }}


# Do all the stuff using a template, or just delete/append/insert/update rules
- name: build iptables ruleset
  include_tasks: "rules-{{ iptables_apply__action }}.yml"


# Actually apply the ruleset and try to confirm it. The conditional is for
# idempotency.
- name: apply iptables ruleset
  include_tasks: iptables-apply.yml
  when: iptables_ruleset is changed


# Save applied ruleset so it will be applied again after reboot.
- name: confirm applied ruleset as persistent
  command: "service {{ iptables_apply__service }} save"
  args:
    warn: no
  when:
    - iptables_ruleset is changed
    - iptables_apply__persist|bool


# And finally, ensure the service is started and enabled (or not)
- name: manage firewall service state and activation
  systemd:
    name: "{{ iptables_apply__service }}"
    enabled: "{{ iptables_apply__service_enabled|bool }}"
    state: "{{ 'started' if iptables_apply__service_started|bool else 'stopped' }}"

